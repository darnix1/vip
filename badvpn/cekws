#!/bin/bash

# ==============================================
# CONFIGURACIÓN INICIAL
# ==============================================
DF='\e[39m'; Bold='\e[1m'
red='\e[31m'; green='\e[32m'
NC='\e[0m'; cyan='\e[36m'
Lgreen='\e[92m'; Lyellow='\e[93m'

# Archivo temporal único
TMP_FILE=$(mktemp)
trap "rm -f $TMP_FILE" EXIT

# ==============================================
# FUNCIONES PRINCIPALES
# ==============================================

# Función para convertir bytes
con() {
    local -i bytes=$1
    if [[ $bytes -lt 1024 ]]; then
        echo "${bytes}B"
    elif [[ $bytes -lt 1048576 ]]; then
        echo "$(( (bytes + 1023)/1024 ))KB"
    elif [[ $bytes -lt 1073741824 ]]; then
        echo "$(( (bytes + 1048575)/1048576 ))MB"
    else
        echo "$(( (bytes + 1073741823)/1073741824 ))GB"
    fi
}

# Función para obtener conexiones activas REALES por usuario
get_active_connections() {
    local user=$1
    local -i active_ips=0
    
    # 1. Obtener todas las conexiones activas de Xray
    ss -tnp state established | grep 'xray' | awk '{print $5}' | cut -d: -f1 | sort | uniq > "${TMP_FILE}_all"
    
    # 2. Obtener IPs recientes del usuario (últimos 2 minutos)
    grep -w "$user" /var/log/xray/access.log | awk -v now=$(date +%s) '
        {
            # Convertir fecha del log a timestamp
            "date -d \""$1" "$2"\" +%s" | getline timestamp
            if (now - timestamp <= 120) {  # Últimos 120 segundos
                split($3, parts, ":")
                print parts[1]
            }
        }' | sort | uniq > "${TMP_FILE}_user"
    
    # 3. Contar IPs que aparecen en ambos listados
    active_ips=$(grep -Fxf "${TMP_FILE}_all" "${TMP_FILE}_user" | wc -l)
    
    echo $active_ips
}

# Función para mostrar información de usuario
show_user() {
    local user=$1
    local detail=${2:-false}
    
    # Obtener datos del usuario
    local last_login=$(grep -w "$user" /var/log/xray/access.log | tail -1 | awk '{print $1, $2}')
    local usage=$(con $(cat /etc/vmess/${user} 2>/dev/null || echo 0))
    local limit=$(con $(cat /etc/limit/vmess/${user} 2>/dev/null || echo 0))
    local iplimit=$(cat /etc/kyt/limit/vmess/ip/${user} 2>/dev/null || echo "N/A")
    local active_ips=$(get_active_connections "$user")
    local total_ips=$(cat "${TMP_FILE}_user" 2>/dev/null | wc -l)
    
    # Mostrar información
    echo -e " ${cyan}┌──────────────────────────────────────┐${NC}"
    printf "  ${Lgreen}%-12s${NC} ${Lyellow}%-40s${NC}\n" "Usuario:" "$user"
    printf "  ${Lgreen}%-12s${NC} ${Lyellow}%-40s${NC}\n" "Último acceso:" "$last_login"
    printf "  ${Lgreen}%-12s${NC} ${Lyellow}%-40s${NC}\n" "Consumo:" "$usage"
    printf "  ${Lgreen}%-12s${NC} ${Lyellow}%-40s${NC}\n" "Límite:" "$limit"
    printf "  ${Lgreen}%-12s${NC} ${Lyellow}%-40s${NC}\n" "Límite IP:" "$iplimit"
    printf "  ${Lgreen}%-12s${NC} ${Lyellow}%-40s${NC}\n" "IPs activas:" "$active_ips"
    printf "  ${Lgreen}%-12s${NC} ${Lyellow}%-40s${NC}\n" "IPs totales:" "$total_ips"
    
    # Mostrar detalles extendidos si se solicita
    if [[ "$detail" == true && "$total_ips" -gt 0 ]]; then
        echo -e " ${cyan}├─────────────── IPs Conectadas ──────────────┤${NC}"
        grep -Fxf "${TMP_FILE}_all" "${TMP_FILE}_user" | while read ip; do
            echo -e "  ${Lyellow}•${NC} $ip ${green}(conectada)${NC}"
        done
        grep -Fvxf "${TMP_FILE}_all" "${TMP_FILE}_user" | while read ip; do
            echo -e "  ${Lyellow}•${NC} $ip ${red}(desconectada)${NC}"
        done
    fi
    
    echo -e " ${cyan}└──────────────────────────────────────┘${NC}"
}

# ==============================================
# PROGRAMA PRINCIPAL
# ==============================================
clear

# Verificar si se solicita detalle extendido
DETAIL=false
[[ "$1" == "--detail" || "$1" == "-d" ]] && DETAIL=true

# Obtener lista de usuarios
users=$(grep '###' /etc/xray/config.json | awk '{print $2}' | sort | uniq)

# Mostrar encabezado
echo -e "\n${cyan}══════════════════════════════════════════════${NC}"
echo -e "       ${Bold}REPORTE DE CONEXIONES VMESS${NC}"
echo -e "${cyan}══════════════════════════════════════════════${NC}"

# Procesar cada usuario
total_active=0
total_connections=0
for user in $users; do
    show_user "$user" "$DETAIL"
    active=$(get_active_connections "$user")
    ((total_active += active))
    total=$(cat "${TMP_FILE}_user" 2>/dev/null | wc -l)
    ((total_connections += total))
done

# Mostrar resumen
echo -e "\n${green}■ Resumen Estadístico:${NC}"
echo -e "  ${cyan}Usuarios totales:${NC} $(echo "$users" | wc -w)"
echo -e "  ${cyan}Conexiones activas totales:${NC} $total_active"
echo -e "  ${cyan}Conexiones históricas totales:${NC} $total_connections"
echo -e "${cyan}══════════════════════════════════════════════${NC}\n"
