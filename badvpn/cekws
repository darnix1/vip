#!/bin/bash

# ==============================================
# CONFIGURACIÓN INICIAL
# ==============================================
DF='\e[39m'; Bold='\e[1m'; Blink='\e[5m'
red='\e[31m'; green='\e[32m'; blue='\e[34m'
PURPLE='\e[35m'; cyan='\e[36m'; NC='\e[0m'
Lgreen='\e[92m'; Lyellow='\e[93m'

# Archivos temporales
TMP_DIR=$(mktemp -d)
TMP_ACTIVE="${TMP_DIR}/active_connections.tmp"
trap "rm -rf ${TMP_DIR}" EXIT

# ==============================================
# FUNCIONES PRINCIPALES
# ==============================================

# Función para convertir bytes
con() {
    local -i bytes=$1
    if [[ $bytes -lt 1024 ]]; then
        echo "${bytes}B"
    elif [[ $bytes -lt 1048576 ]]; then
        echo "$(( (bytes + 1023)/1024 ))KB"
    elif [[ $bytes -lt 1073741824 ]]; then
        echo "$(( (bytes + 1048575)/1048576 ))MB"
    else
        echo "$(( (bytes + 1073741823)/1073741824 ))GB"
    fi
}

# Función para detectar conexiones activas
get_active_connections() {
    # Usar ss para detectar conexiones activas en puerto 443 (o el que use Xray)
    ss -tnp | grep 'xray' | awk '{print $5}' | cut -d: -f1 | sort | uniq > "${TMP_ACTIVE}"
}

# Función para verificar IPs activas por usuario
check_user_ips() {
    local user=$1
    local user_ips_file="${TMP_DIR}/${user}_ips.tmp"
    local active_count=0
    
    # Obtener IPs históricas del usuario
    grep -w "$user" /var/log/xray/access.log | tail -n 100 | awk '{print $3}' | cut -d: -f1 | sort | uniq > "${user_ips_file}"
    
    # Verificar cuáles están activas ahora
    while read ip; do
        if grep -q "^${ip}$" "${TMP_ACTIVE}"; then
            ((active_count++))
        fi
    done < "${user_ips_file}"
    
    echo "${active_count}"
}

# Función para mostrar información de usuario
show_user() {
    local user=$1
    local detail=${2:-false}
    local last_login=$(grep -w "$user" /var/log/xray/access.log | tail -1 | awk '{print $2}')
    local usage=$(con $(cat /etc/vmess/${user} 2>/dev/null || echo 0))
    local limit=$(con $(cat /etc/limit/vmess/${user} 2>/dev/null || echo 0))
    local iplimit=$(cat /etc/kyt/limit/vmess/ip/${user} 2>/dev/null || echo "N/A")
    local active_ips=$(check_user_ips "$user")
    local total_ips=$(cat "${TMP_DIR}/${user}_ips.tmp" | wc -l)

    echo -e " \033[1;36m┌──────────────────────────────────────┐\033[0m"
    printf "  %-13s %-7s %-8s %2s\n" "  UserName : ${user}" | lolcat
    printf "  %-13s %-7s %-8s %2s\n" "  LastLogin: $last_login" | lolcat
    printf "  %-13s %-7s %-8s %2s\n" "  Usage    : ${usage}" | lolcat
    printf "  %-13s %-7s %-8s %2s\n" "  Limit    : ${limit}" | lolcat
    printf "  %-13s %-7s %-8s %2s\n" "  Max IPs  : $iplimit" | lolcat
    printf "  %-13s %-7s %-8s %2s\n" "  ActiveIPs: ${active_ips}" | lolcat
    printf "  %-13s %-7s %-8s %2s\n" "  TotalIPs : ${total_ips}" | lolcat
    
    if [[ "$detail" == true && "$total_ips" -gt 0 ]]; then
        echo -e " \033[1;36m├─────────────── Active Connections ────────┐\033[0m"
        while read ip; do
            if grep -q "^${ip}$" "${TMP_ACTIVE}"; then
                status="${green}✓${NC}"
            else
                status="${red}✗${NC}"
            fi
            echo -e "  ${Lyellow}•${NC} $ip $status"
        done < "${TMP_DIR}/${user}_ips.tmp"
    fi
    
    echo -e " \033[1;36m└──────────────────────────────────────┘\033[0m"
}

# ==============================================
# PROGRAMA PRINCIPAL
# ==============================================
clear

# Verificar modo detallado
DETAIL=false
[[ "$1" == "--detail" || "$1" == "-d" ]] && DETAIL=true

# Obtener lista de usuarios
users=$(grep '###' /etc/xray/config.json | awk '{print $2}' | sort | uniq)

# Obtener conexiones activas
get_active_connections

# Mostrar encabezado
echo -e "\033[1;36m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e " \e[1;97;101m        VMESS USER CONNECTION REPORT      \e[0m"
echo -e "\033[1;36m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"

# Procesar cada usuario
for user in $users; do
    show_user "$user" "$DETAIL"
done

# Mostrar resumen estadístico
total_users=$(echo "$users" | wc -w)
active_users=0
total_active_ips=0

for user in $users; do
    user_ips=$(check_user_ips "$user")
    [[ "$user_ips" -gt 0 ]] && ((active_users++))
    ((total_active_ips+=user_ips))
done

echo -e "\033[1;36m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e " ${cyan}■ Total Users:${NC} $total_users"
echo -e " ${cyan}■ Active Users:${NC} $active_users"
echo -e " ${cyan}■ Inactive Users:${NC} $((total_users - active_users))"
echo -e " ${cyan}■ Total Active IPs:${NC} $total_active_ips"
echo -e "\033[1;36m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
