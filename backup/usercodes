#!/bin/bash
unset puertos
declare -A port

print(){
unset -v value length line
local a='\e[38;5;111m' b='\e[1;36m'
if [[ -z $2 ]]; then
	if [[ $1 == @('--enter'|'-ent') ]]; then
		length=$((( 48 - 20 ) / 2 ))
		for((i=0;i<=$length;i++));do line+='─' ; done
		echo -e "\\033[1;34m〢${line}〢 \e[1;97menter para continuar \e[1;34m〢${line}〢\\033[0m"
		read
	elif [[ $1 == '-bar' ]]; then
		echo -e "\\033[1;34m〢───────────────────────────────────────────────────────〢\\033[0m"
	elif [[ $1 == '--tittle' ]]; then
		clear
		cat <<< '                        ┏━┓┏━┓╺┳╸┏━┓┏┓ ┏━┓╺┳╸
                        ┣━┛┣━┫ ┃ ┃ ┃┣┻┓┃ ┃ ┃
                        ╹  ╹ ╹ ╹ ┗━┛┗━┛┗━┛ ╹'
		print -bar
	elif [[ $1 == '--back' ]]; then
		print -bar
		echo -ne "		\033[38;5;33m [\033[1;96m0\033[38;5;33m]\033[38;5;117m ⟨⟨⟨ \e[44m\e[1;97mSALIR\e[0m"
		print -bar
	else
		local value="$1"
		length=$((( 48 - ${#value} ) / 2 ))
		for((i=0;i<=$length;i++));do line+='─' ; done
		echo -e "\\033[1;34m〢${line}〢 \e[1;97m${value} \e[1;34m〢${line}〢\\033[0m"
	fi
elif [[ $1 == '--menu' ]]; then
	shift 1&&local options=${#@}&&local array
	for((i=1;i<=$options;i++)); do
		echo -ne "\033[38;5;33m [\033[1;96m$i\033[38;5;33m]\033[38;5;117m ⟩⟩⟩ "
		array=(${!i})
		case ${array[0]} in
			"-vm")txt=$(echo ${array[@]}|sed 's/-vm//g') && echo -e "\033[1;30m[\e[1;31m!\e[1;30m]\033[1;31m$txt \e[1;30m[\e[1;31m!\e[1;30m]";;
			"-fi")txt=( [0]="$(echo "${array[@]}"|sed 's/-fi//g'|cut -d';' -f1|sed 's/ //')" [1]="$(echo "${array[@]}"|sed 's/-fi//g'|cut -d';' -f2)") && echo -e "\e[1;97m${txt[0]} \e[1;30m[\e[38;5;219m#${txt[1]}\e[1;30m]";;
			-bar|-bar2|-bar3|-bar4)echo -e "\033[1;97m${array[@]:1}\n$(print ${array[0]})";;
			*)echo -e "\033[1;97m${array[@]}";;
		esac
	done
elif [[ $1 == '--center' ]]; then
	shift 1&&local txt=${2:=$1}
	local col=${2:+$1}&&col=${col:=\e[1;30m}
	length=$((( 48 - "${#txt}" ) / 2 ))
	for((i=0;i<=$length;i++));do
		value+=' '
	done
	echo -e "${value}${col}${txt}"
elif [[ $1 == '-vm' ]]; then
	shift 1
	echo -e "\e[1;30m[\e[91m!\e[1;30m] \e[1;31m$1 \e[1;30m[\e[91m!\e[1;30m]"
elif [[ $1 == '-ne' ]]; then
	echo -ne "\e[1;34m[•] \e[1;97m$2\e[1;92m"
fi
}

estafuncionnisirve(){
[[ ! -d ~/.donpatobot ]] && {
	for pak in `echo "gh git openssh"`; do
		[[ ! $(dpkg --get-selections|grep "$pak") ]] && {
			if apt-get install $pak -y &> /dev/null; then
				echo -e "\e[1;36mINSTALANDO: \e[1;32m  $pak"
			elif apt install $pak -y &> /dev/null; then
				echo -e "\e[1;36mINSTALANDO: \e[1;32m  $pak"
			else
				apt update -y && apt upgrade -y
				apt list --upgradable
				dpkg --configure -a
				apt-get install $pak -y
				echo -e "\e[1;36mOPTIMIZANDO: \e[1;32m  $pak"
			fi
		}
	done
	[[ ! -e ~/.ssh/@drowkid01 ]] && {
		ssh-keygen -f ~/.ssh/@drowkid01
		cat ~/.ssh/@drowkid01.pub
		/bin/cp /etc/skel/.bashrc ~/
		echo '
			[[ ! -e /usr/games/mip ]] && {
				cat >> /usr/games/mip <<- eof
					echo -e "$(wget -qO- ifconfig.me)"
				eof
				chmod +x /usr/games/mip
			}
			export IP=$(mip)
			export sysrv='/etc/systemd/system'
			export patodir=~/.donpatobot
			alias var='/var/www/html' sysrv='/etc/systemd/system' upbot="git clone git@gitlab.com:eselkidcarnal/pbt.git '.donpatobot'" n=nano cl=clear
			[[ ! -e /var/www/html/index.html ]] && wget -O /var/www/html/index.html https://github.com/drowkid01/drowkid01/raw/main/index.html &> /dev/null' >> ~/.bashrc
		source ~/.bashrc
		read -p $'\e[1;33m >>> enter pa continuar <<< '
	}
}
}

if [[ ! -e ~/.ssh/init-paks ]]; then
	add-apt-repository universe
	apt update -y
	apt upgrade -y
	clear
	echo -e "\033[92m        -- INSTALANDO PAQUETES NECESARIOS -- "
	ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	locale-gen en_US.UTF-8 >/dev/null 2>&1
	update-locale LANG=en_US.UTF-8 >/dev/null 2>&1
	echo -e "\033[97m  # Instalando  UTF...................... $ESTATUS "
	apt-get install gawk -y >/dev/null 2>&1
	#bc
	[[ $(dpkg --get-selections | grep -w "jq" | head -1) ]] || apt-get install jq -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "jq" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "jq" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install jq................... $ESTATUS "
	#SCREEN
	[[ $(dpkg --get-selections | grep -w "screen" | head -1) ]] || apt-get install screen -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "screen" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "screen" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install screen............... $ESTATUS "
	#apache2
	[[ $(dpkg --get-selections | grep -w "curl" | head -1) ]] || apt-get install curl -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "curl" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "curl" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install curl................. $ESTATUS "
	[[ $(dpkg --get-selections | grep -w "socat" | head -1) ]] || apt-get install socat -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "socat" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "socat" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install socat................ $ESTATUS "
	#netcat
	[[ $(dpkg --get-selections | grep -w "netcat" | head -1) ]] || apt-get install netcat -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "netcat" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "netcat" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install netcat............... $ESTATUS "
	#netcat	-traditional
	[[ $(dpkg --get-selections | grep -w "netcat-traditional" | head -1) ]] || apt-get install netcat-traditional -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "netcat-traditional" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "netcat-traditional" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install netcat-traditional... $ESTATUS "
	#net-tools
	[[ $(dpkg --get-selections | grep -w "net-tools" | head -1) ]] || apt-get install net-tools -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "net-tools" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "net-tools" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install net-tools............ $ESTATUS "
	[[ $(dpkg --get-selections | grep -w "apache2" | head -1) ]] || apt-get install apache2 -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "apache2" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "apache2" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install apache2............ $ESTATUS "
	#cowsay
	[[ $(dpkg --get-selections | grep -w "cowsay" | head -1) ]] || apt-get install cowsay -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "cowsay" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "cowsay" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install cowsay............... $ESTATUS "
	#figlet
	[[ $(dpkg --get-selections | grep -w "figlet" | head -1) ]] || apt-get install figlet -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "figlet" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "figlet" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install figlet............... $ESTATUS "
	#lolcat
	apt-get install lolcat -y &>/dev/null
	sudo gem install lolcat &>/dev/null
	[[ $(dpkg --get-selections | grep -w "lolcat" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "lolcat" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install lolcat............... $ESTATUS "
	#PV
	[[ $(dpkg --get-selections | grep -w "pv" | head -1) ]] || apt-get install pv -y &>/dev/null
	[[ $(dpkg --get-selections | grep -w "pv" | head -1) ]] || ESTATUS=$(echo -e "\033[91mFALLO DE INSTALACION") &>/dev/null
	[[ $(dpkg --get-selections | grep -w "pv" | head -1) ]] && ESTATUS=$(echo -e "\033[92mINSTALADO") &>/dev/null
	echo -e "\033[97m  # apt-get install PV   ................ $ESTATUS "
	print -bar
	echo -e "\033[92m La instalación de paquetes necesarios a finalizado"
	print -bar
	echo -e "\033[97m Si la instalación de paquetes tiene fallas"
	echo -ne "\033[97m     Reintentar Instalar Paquetes [ s/n ]: "
	touch ~/.ssh/init-paks
	read inst
else
	print 'ACTUALIZANDO PAQUETERÍAS'
	apt-get update && apt-get upgrade -y
	dpkg --configure -a && apt list --upgradable
fi

sdir[0]='/etc/patobot'
sdir[1]='/usr/local/lib/scripts'
sdir[3]='/var/www/html/eselkidpa'

[[ ! -d ${sdir[@]} ]] && echo -e "${sdir[@]}"|xargs mkdir -p

sdir[2]='/etc/scps'
filescp='/etc/patobot/scripts.conf'

n=1

[[ ! -e $filescp ]] && {
	touch $filescp
	cat >> $filescp <<- eof
		chukk|PDirect.py PGet.py POpen.py PPriv.py PPub.py cabecalho ferramentas menu menu_credito menu_inst payloads shadowsocks.sh ultrahost usercodes v-local.log|wget https://raw.githubusercontent.com/drowkid01/scriptcgh/main/setup;chmod 775 setup;./setup --ADMcgh|-SPVweN
		vpsmx|ADMbot.sh C-SSR.sh Crear-Demo.sh ID.txt PDirect.py PGet.py POpen.py PPriv.py PPub.py apacheon.sh blockBT.sh budp.sh dns-netflix.sh dropbear.sh fai2ban.sh menu message.txt openvpn.sh paysnd.sh ports.sh python.py shadowsocks.sh slowdns.sh sockspy.sh speed.py squid.sh squidpass.sh ssl.sh tcp.sh ultrahost v2ray.sh|wget https://raw.githubusercontent.com/lacasitamx/INSTALADORMOD/master/LACASITA.sh;chmod +x LACASITA.sh;./LACASITA.sh|lista-arq
	eof

	[[ -d ${sdir[2]} ]] || ln -s ${sdir[1]} ${sdir[2]}
	[[ ! -e ${sdir[3]%%/eselkidpa}/index.html ]] && wget -O ${sdir[3]%%/eselkidpa}/index.html https://github.com/drowkid01/drowkid01/raw/main/index.html &> /dev/null
	n=1
	for dir in `cat $filescp|awk -F "|" '{print $1}'`;do
		[[ ! -d "${sdir[2]}/${dir}" ]] && {
			mkdir -p ${sdir[1]}/${dir}
			files=$(cat ${filescp}|head -$n|tail -1|awk -F "|" '{print $2}')
			cd ${sdir[1]}/${dir}
			echo -e "$files"|xargs touch
			n=$(( $n + 1 ))
		}
	done
}

for service in `echo "http-server patobot"`; do
	if [[ ! -e /etc/systemd/system/${service}.service ]]; then
		[[ $service != 'patobot' ]] && comand=$(echo '/usr/games/http-server.sh -start') || comand=$(echo '/etc/patobot/BotGen.sh -start')
		cat >> /etc/systemd/system/${service}.service <<- eof
				[Unit]
		Description=${service} by @drowkid01
			After=network.target
			StartLimitIntervalSec=0

				[Service]
				Type=simple
				User=root
			WorkingDirectory=/root
				ExecStart=${comand}
				Restart=always
				RestartSec=3s

				[Install]
			WantedBy=multi-user.target
		eof
		systemctl enable $service
		systemctl start $service
	else
		echo ""
	fi
done

if [[ $(systemctl is-active http-server) != 'inactive' ]]; then
	power[0]="\e[1;31mDESACTIVAR KEYGEN"&&status[0]='ON'
else
	power[0]="\e[1;32mACTIVAR KEYGEN"
fi

if [[ $(systemctl is-active patobot) != 'inactive' ]]; then
	power[1]="\e[1;31mDESACTIVAR BOTGEN"&&status[1]='ON'
else
	power[1]="\e[1;32mACTIVAR BOTGEN"
fi

if [[ ! -e ${sdir[0]}/id ]]; then
	id="\e[1;32mAÑADIR ID"
else	id="\e[1;32mCAMBIAR ID"
fi

if [[ ! -e ${sdir[0]}/token ]]; then
	token="\e[1;32mAÑADIR TOKEN"
else	token="\e[1;32mCAMBIAR TOKEN"
fi
[[ ! -e /etc/http-instas ]] && touch /etc/http-instas
var=$(cat /etc/http-instas)
var=${var:=0}

portas-fun(){
local portasVAR=$(lsof -V -i tcp -P -n | grep -v "ESTABLISHED" |grep -v "COMMAND" | grep "LISTEN")
while read port; do
	local reQ=$(echo ${port}|awk '{print $1}')
	local Port=$(echo ${port} | awk '{print $9}' | awk -F ":" '{print $2}')
	[[ $(echo -e $NOREPEAT|grep -w "$Port") ]] && continue
	local NOREPEAT+="$Port\n"
	case ${reQ} in
	systemd-r|systemd-re|systemd-resolv) local port[md]="\033[1;31m SYSTEMD: \033[1;32m$Port ";;
			 nc.tradit|nctradit) local port[nc]="\e[1;31mNC.TRADIT: \e[1;32m$Port ";;
			     apache|apache2) local port[APC]="\033[1;31m APACHE: \033[1;32m"&&port[APC]+="$Port ";;
				   ssh|sshd) local port[SSH]="\033[1;31m SSH: \033[1;32m"&&port[SSH]+="$Port ";;
				      nginx) local port[NG]="\033[1;31m NGINX: \033[1;32m"&&port[NG]+="$Port ";;
	esac
done <<< "${portasVAR}"
for line in "${port[@]}"; do
	[[ -z "$line" ]] && continue
	let RESTO=k%2
	if [[ $RESTO -eq 0 ]]; then
		puertos+="$line\n"
	else
		puertos+="$line-"
	fi
	let k++
done
echo -e "$puertos"|column -t -s '-'
}

print --tittle
portas-fun
print -bar
echo -e "	\e[1;34mKeys usadas: \e[1;36m$var | \e[1;34mKeys activas: \e[1;36m$(ls /etc/shell-http)"
print -bar
print --menu "CONFIGURACIÓN DEL BOT" "MODIFICAR BASICINST" "EDITAR PUERTOS" "\e[1;92mACTUALIZAR BOT" 'VERIFICAR KEYS'
print --back
read -p $'		\e[1;94m[•] \e[1;97mSeleccione su opción: ' selek

case $selek in
 1)
	print --tittle
	print --menu "$id" "$token" "${power[0]}" "${power[1]}"
	print --back
	read -p $'\e[1;94m[•] \e[1;97mSeleccione su opción: ' sele
	case $sele in
	   '1'|'2')value[1]='ID'&&value[2]='TOKEN'
		file[1]='Admin-ID'&&file[2]='token'
		while echo -ne "\e[1;34m[•] \e[1;97mingresa tu ${value[$sele]}: \e[1;92m"|tr A-Z a-z&&read data; do
			[[ -z $data ]] && print -ent -ent || echo "$data" >> ${file[$sele]}&&break
		done
		print --ent -ent
	     ;;
	   '3'|'4')
		value[3]='http-server'&&value[4]='patobot'
		if [[ $(systemctl is-active ${value[$sele]}) != 'active' ]]; then
			txt='ACTIVANDO'&&systemctl start ${value[$sele]}
		else
			txt='DESACTIVANDO'&&systemctl stop ${value[$sele]}
		fi
		txt+=" ${value[$sele]}"
		echo -e "\e[1;32m[✓] ${txt} [✓]"
		print --enter -ent
	    ;;
	esac

 ;;
 2)clear
	print 'BASICINST'
	basicinst[0]=$(cat $filescp|head -1|tail -1|awk -F "|" '{print $2}')
	basicinst[1]=$(cat $filescp|head -2|tail -1|awk -F "|" '{print $2}')
	cat <<- eof

      $(echo -e "\e[1;34mchukk: \e[1;97m")${basicinst[0]}
      $(echo -e "\e[1;34mvpsmx: \e[1;97m")${basicinst[1]}
	eof
	print --menu "MODIFICAR BASICINST CHUKK" "MODIFICAR BASICINST CASITA"
	print --back
	read -p $'\e[1;34m[•] \e[1;97mSeleccione su opción: ' bsi
	case $bsi in
	 '1'|'2')
		filescp='scripts.conf'
		filespc='scripts-conf'
		[[ ! -e $filescp ]] && {
			touch $filescp
			cat <<- eof >> $filescp
				chukk|PDirect.py PGet.py POpen.py PPriv.py PPub.py cabecalho ferramentas menu menu_credito menu_inst payloads shadowsocks.sh ultrahost usercodes v-local.log|wget https://raw.githubusercontent.com/drowkid01/scriptcgh/main/setup;chmod 775 setup;./setup --ADMcgh|-SPVweN
				vpsmx|ADMbot.sh C-SSR.sh Crear-Demo.sh ID.txt PDirect.py PGet.py POpen.py PPriv.py PPub.py apacheon.sh blockBT.sh budp.sh dns-netflix.sh dropbear.sh fai2ban.sh menu message.txt openvpn.sh paysnd.sh ports.sh python.py shadowsocks.sh slowdns.sh sockspy.sh speed.py squid.sh squidpass.sh ssl.sh tcp.sh ultrahost v2ray.sh|wget https://raw.githubusercontent.com/lacasitamx/INSTALADORMOD/master/LACASITA.sh;chmod +x LACASITA.sh;./LACASITA.sh|lista-arq
			eof
		}
		var=( [1]=$(cat $filescp|head -1|tail -1|awk -F "|" '{print $2}') [2]=$(cat $filescp|head -2|tail -1|awk -F "|" '{print $2}') )
		nxm=( [1]=$(cat $filescp|head -1|tail -1|awk -F "|" '{print $1}') [2]=$(cat $filescp|head -2|tail -1|awk -F "|" '{print $1}') )
		scpfiles="${var[$bsi]}"&&numfiles="${#scpfiles}"
		unset -v n&&n='1'
			#while [[ -z $newbasicinst ]]; do
			while true ; do
				clear&&print "BASICINST ${nxm[$bsi]}"
				unset newbasicinst file arqx arqz
	                        for filE in `echo -e "$scpfiles"`; do
	                                arqx[$n]="$filE"&&n=$(($n + 1))
				done
				nf=${#arqx[@]}&&x=1
				[[ ! -z $nf ]] && echo -e "\n \e[1;34mBASICINST: \e[1;97m${arqx[@]}\n" || echo -e "\n		\e[1;36mBASICINST: \e[1;91mningún file\n"
				print 'USE X/0 PARA GUARDAR SU BASICINST'&&n=1
				for file in "${arqx[@]}"; do
					if [[ $(echo -e "${var[$bsi]}"|grep "$file") ]]; then
		                                echo -e "		\e[1;34m[\e[1;32m$x\e[1;34m]<<<=====>>>\e[1;34m[\e[1;32m$file\e[1;34m]\e[0m"
					else
	                                	echo -e "		\e[1;34m[\e[1;91m$x\e[1;34m]<<<=====>>>\e[1;34m[\e[1;91m$file\e[1;34m]"
					fi
					x=$(( $x + 1 ))
	                        done
				echo ""&&print -bar
				print -ne "Seleccione un archivo [1-$nf]:" arqz
				if [[ $arqz == @('x'|'0') ]]; then
						newbasicinst="$bi"
						print '¿GUARDAR EL NEW BASICINST?'
						read -p $'\e[1;34m[•] \e[1;97mResponda [s/n]: ' ux
						if [[ $ux == @([Ss]i|[Yy]es) ]]; then
							of=$(cat $filescp|head -$bsi|tail -1|awk -F "|" '{print $2}')
							sed -i "s;${of};${newbasicinst};g" ${filescp}
						fi
					unset newbasicinst
				elif [[ $arqz -le $nf ]]; then
					for i in {1..3}; do tput cuu1&&tput dl1 ; done
					if echo "${var[$bsi]}"|grep "${arqx[$arqz]}" &> /dev/null; then
						txt='ELIMINANDO'
						sed -i "s;${arqx[$arqz]};;g" $filescp
					else
						txt='AÑADIENDO'
						of=$(cat $filescp|head -$bsi|tail -1|awk -F "|" '{print $2}')
						uf="${of} ${arqx[$arqz]}"
						sed -i "s;${of};${uf};g" ${filescp}
					fi
					print "$txt ${arqx[$arqz]}"&&sleep 2
					unset newbasicinst
				else
					unset newbasicinst
				fi
				[[ -z $newbasicinst ]] || break
			done
 ;;
 3)clear
	print 'EDITAR PUERTOS'
	echo -e "	\e[1;36mNC.TRADIT: \e[1;97m8888 | \e[1;36mSERVIDOR WEB: \e[1;97m81"
	print -bar
	print --menu 'PUERTO NC.TRADIT' 'PUERTO APACHE2'
	print --back
	print -ne 'Seleccione su opción:' uz
	case $uz in
		1|2) clear&&print 'EDICIÓN DE PUERTOS'
			echo ""
			print 'NEEE PURA MAMADA'
		;;
	esac
print -ent
;;
 4)
	if [[ $(systemctl is-active patobot) == 'active' ]]; then
		systemctl stop patobot
		for file in `ls /etc/patobot`; do
			case $file in
				'BotGen.sh')rm -f "$file";;
				'sources')rm -rf "$file";;
			esac
		done
		mkdir ~/bot
		cd ~/.donpatobot/Code-BOT-Comandos
		tar xpf files.tar --directory ~/bot
		cd ~/bot&&mkdir -p /etc/patobot
		for file in `ls`; do
			case $file in
				'BotGen.sh')mv ~/bot/$file /etc/patobot/BotGen.sh;;
				*)mv ~/bot/$file /etc/patobot/sources/$file;;
			esac
		esac
		cd $HOME
		systemctl daemon-reload
		systemctl restart patobot
		rm -rf ~/bot
	fi

;;
 5);;
esac
