msg() { ##-->> COLORES, TITULO, BARRAS
  ##-->> ACTULIZADOR Y VERCION
  [[ ! -e /etc/SCRIPT-LATAM/temp/version_instalacion ]] && printf '1\n' >/etc/SCRIPT-LATAM/temp/version_instalacion
  v11=$(cat /etc/SCRIPT-LATAM/temp/version_actual)
  v22=$(cat /etc/SCRIPT-LATAM/temp/version_instalacion)
  if [[ $v11 = $v22 ]]; then
    vesaoSCT="\e[1;31m[\033[1;37m Ver.\033[1;32m $v22 \033[1;31m]"
  else
    vesaoSCT="\e[1;31m[\e[31m ACTUALIZAR \e[25m\033[1;31m]"
  fi
  ##-->> COLORES
  local colors="/etc/SCRIPT-LATAM/colors"
  if [[ ! -e $colors ]]; then
    COLOR[0]='\033[1;37m' #GRIS='\033[1;37m'
    COLOR[1]='\e[31m'     #ROJO='\e[31m'
    COLOR[2]='\e[32m'     #VERDE='\e[32m'
    COLOR[3]='\e[33m'     #AMARILLO='\e[33m'
    COLOR[4]='\e[34m'     #AZUL='\e[34m'
    COLOR[5]='\e[91m'     #ROJO-NEON='\e[91m'
    COLOR[6]='\033[1;97m' #BALNCO='\033[1;97m'

  else
    local COL=0
    for number in $(cat $colors); do
      case $number in
      1) COLOR[$COL]='\033[1;37m' ;;
      2) COLOR[$COL]='\e[31m' ;;
      3) COLOR[$COL]='\e[32m' ;;
      4) COLOR[$COL]='\e[33m' ;;
      5) COLOR[$COL]='\e[34m' ;;
      6) COLOR[$COL]='\e[35m' ;;
      7) COLOR[$COL]='\033[1;36m' ;;
      esac
      let COL++
    done
  fi
  NEGRITO='\e[1m'
  SINCOLOR='\e[0m'
  case $1 in
  -ne) cor="${COLOR[1]}${NEGRITO}" && echo -ne "${cor}${2}${SINCOLOR}" ;;
  -ama) cor="${COLOR[3]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}" ;;
  -verm) cor="${COLOR[3]}${NEGRITO}[!] ${COLOR[1]}" && echo -e "${cor}${2}${SINCOLOR}" ;;
  -verm2) cor="${COLOR[1]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}" ;;
  -azu) cor="${COLOR[6]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}" ;;
  -verd) cor="${COLOR[2]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}" ;;
  -bra) cor="${COLOR[0]}${SINCOLOR}" && echo -e "${cor}${2}${SINCOLOR}" ;;
  "-bar2" | "-bar") cor="${COLOR[1]}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" && echo -e "${SINCOLOR}${cor}${SINCOLOR}" ;;
  # Centrar texto
  -tit) echo -e " \e[48;5;214m\e[38;5;0m   üíª ùôé ùòæ ùôç ùôÑ ùôã ùôè | ùôá ùòº ùôè ùòº ùôà üíª   \e[0m  $vesaoSCT" ;;
  esac
}

clear && clear
  msg -bar
  msg -tit
  msg -bar
  echo -e "\033[1;93m           INFORMACION DE PUERTOS ACTIVOS"
  msg -bar2
  local portasVAR=$(lsof -V -i tcp -P -n | grep -v "ESTABLISHED" | grep -v "COMMAND" | grep "LISTEN")
  local NOREPEAT
  local reQ
  local Port
  while read port; do
    reQ=$(echo ${port} | awk '{print $1}')
    Port=$(echo {$port} | awk '{print $9}' | awk -F ":" '{print $2}')
    [[ $(echo -e $NOREPEAT | grep -w "$Port") ]] && continue
    NOREPEAT+="$Port\n"
    case ${reQ} in
    squid | squid3)
      [[ -z $SQD ]] && local SQD="\033[1;31m SQUID: \033[1;32m"
      SQD+="$Port "
      ;;
    apache | apache2)
      [[ -z $APC ]] && local APC="\033[1;31m APACHE: \033[1;32m"
      APC+="$Port "
      ;;
    ssh | sshd)
      [[ -z $SSH ]] && local SSH="\033[1;31m SSH: \033[1;32m"
      SSH+="$Port "
      ;;
    dropbear)
      [[ -z $DPB ]] && local DPB="\033[1;31m DROPBEAR: \033[1;32m"
      DPB+="$Port "
      ;;
    ssserver | ss-server)
      [[ -z $SSV ]] && local SSV="\033[1;31m SHADOWSOCKS: \033[1;32m"
      SSV+="$Port "
      ;;
    openvpn)
      [[ -z $OVPN ]] && local OVPN="\033[1;31m OPENVPN-TCP: \033[1;32m"
      OVPN+="$Port "
      ;;
    stunnel4 | stunnel)
      [[ -z $SSL ]] && local SSL="\033[1;31m SSL: \033[1;32m"
      SSL+="$Port "
      ;;
    sshl | sslh)
      [[ -z $SSLH ]] && local SSLH="\033[1;31m SSLH: \033[1;32m"
      SSLH+="$Port "
      ;;
    python | python3)
      [[ -z $PY3 ]] && local PY3="\033[1;31m PYTHON|WEBSOCKET|SSR: \033[1;32m"
      PY3+="$Port "
      ;;
    v2ray)
      [[ -z $V2R ]] && local V2R="\033[1;31m V2RAY: \033[1;32m"
      V2R+="$Port "
      ;;
    badvpn-ud)
      [[ -z $BAD ]] && local BAD="\033[1;31m BADVPN: \033[1;32m"
      BAD+="$Port "
      ;;
    psiphond)
      [[ -z $PSI ]] && local PSI="\033[1;31m PSIPHOND: \033[1;32m"
      PSI+="$Port "
      ;;
    esac
  done <<<"${portasVAR}"
  #UDP
  local portasVAR=$(lsof -V -i -P -n | grep -v "ESTABLISHED" | grep -v "COMMAND")
  local NOREPEAT
  local reQ
  local Port
  while read port; do
    reQ=$(echo ${port} | awk '{print $1}')
    Port=$(echo ${port} | awk '{print $9}' | awk -F ":" '{print $2}')
    [[ $(echo -e $NOREPEAT | grep -w "$Port") ]] && continue
    NOREPEAT+="$Port\n"
    case ${reQ} in
    openvpn)
      [[ -z $OVPN ]] && local OVPN="\033[0;36m OPENVPN-UDP: \033[1;32m"
      OVPN+="$Port "
      ;;
    udpServer)
      [[ -z $UDPSER ]] && local UDPSER="\033[0;36m UDP-SERVER \033[1;32m"
      UDPSER+="$Port "
      ;;
    esac
  done <<<"${portasVAR}"
  [[ ! -z $SSH ]] && echo -e $SSH
  [[ ! -z $SSL ]] && echo -e $SSL
  [[ ! -z $SSLH ]] && echo -e $SSLH
  [[ ! -z $DPB ]] && echo -e $DPB
  [[ ! -z $SQD ]] && echo -e $SQD
  [[ ! -z $PY3 ]] && echo -e $PY3
  [[ ! -z $SSV ]] && echo -e $SSV
  [[ ! -z $V2R ]] && echo -e $V2R
  [[ ! -z $APC ]] && echo -e $APC
  [[ ! -z $OVPN ]] && echo -e $OVPN
  [[ ! -z $BAD ]] && echo -e $BAD
  [[ ! -z $PSI ]] && echo -e $PSI
  port=$(cat /etc/systemd/system/UDPserver.service 2>/dev/null | grep 'exclude' 2>/dev/null)
  port2=$(echo $port | awk '{print $4}' | cut -d '=' -f2 2>/dev/null | sed 's/,/ /g' 2>/dev/null)
  [[ ! -z $UDPSER ]] && echo -e "$UDPSER<--> $port2 "
  msg -bar2
  read -t 120 -n 1 -rsp $'\033[1;39m       << Presiona enter para Continuar >>\n'

